{"version":3,"sources":["webpack://PointerEvent/webpack/bootstrap","webpack://PointerEvent/./node_modules/anim-event/anim-event.esm.js","webpack://PointerEvent/./src/pointer-event.js"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,aAAa,OAAO;AACpB,cAAc,MAAM;AACpB,cAAc,SAAS;AACvB;;AAEA,WAAW,OAAO;AAClB;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,aAAa,SAAS;AACtB,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0E;;;;;;;;;;;;;AC5GA;AAAA,gCAAgC,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE,EAAE,yDAAyD,qEAAqE,6DAA6D,oBAAoB,GAAG,EAAE;;AAEjjB,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,6BAA6B;;AAE7B;AACA;AACA;;AAEA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA,GAAG;AACH,CAAC,iBAAiB;;AAElB;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;;AAEA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,aAAa,SAAS;AACtB,eAAe,OAAO;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,iEAAiE;AACjE;AACA;AACA;AACA;AACA,iEAAiE;AACjE,sDAAsD;AACtD;AACA;AACA;AACA;AACA,mEAAmE;AACnE;AACA;AACA,iHAAiH;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,wFAAwF,iCAAiC;AACzH,yFAAyF,iCAAiC;AAC1H,oEAAoE,iCAAiC;AACrG;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,8DAA8D;AAC9D,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,OAAO;AACP,yEAAyE,iCAAiC;AAC1G,yEAAyE,iCAAiC;AAC1G;AACA;;AAEA;AACA,gBAAgB,kBAAkB;AAClC,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,+GAA+G;AAC/G;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA,6DAA6D;AAC7D,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC;AACA,uEAAuE,iCAAiC;AACxG,wEAAwE,iCAAiC;AACzG;AACA;;AAEA;AACA,gBAAgB,kBAAkB;AAClC,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,+GAA+G;AAC/G;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,8BAA8B;AAC9B;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,2EAA2E,iCAAiC;AAC5G;AACA;;AAEA;AACA,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,+DAA+D;AAC/D,iCAAiC;AACjC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;AAED;;;AAGA;AACA;;AAEA,6E","file":"pointer-event.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/pointer-event.js\");\n","/* ================================================\n        DON'T MANUALLY EDIT THIS FILE\n================================================ */\n\n/*\n * AnimEvent\n * https://github.com/anseki/anim-event\n *\n * Copyright (c) 2018 anseki\n * Licensed under the MIT license.\n */\n\nvar MSPF = 1000 / 60,\n    // ms/frame (FPS: 60)\nKEEP_LOOP = 500,\n\n\n/**\n * @typedef {Object} task\n * @property {Event} event\n * @property {function} listener\n */\n\n/** @type {task[]} */\ntasks = [];\n\nvar requestAnim = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n  return setTimeout(callback, MSPF);\n},\n    cancelAnim = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame || function (requestID) {\n  return clearTimeout(requestID);\n};\n\nvar lastFrameTime = Date.now(),\n    requestID = void 0;\n\nfunction step() {\n  var called = void 0,\n      next = void 0;\n\n  if (requestID) {\n    cancelAnim.call(window, requestID);\n    requestID = null;\n  }\n\n  tasks.forEach(function (task) {\n    var event = void 0;\n    if (event = task.event) {\n      task.event = null; // Clear it before `task.listener()` because that might fire another event.\n      task.listener(event);\n      called = true;\n    }\n  });\n\n  if (called) {\n    lastFrameTime = Date.now();\n    next = true;\n  } else if (Date.now() - lastFrameTime < KEEP_LOOP) {\n    // Go on for a while\n    next = true;\n  }\n  if (next) {\n    requestID = requestAnim.call(window, step);\n  }\n}\n\nfunction indexOfTasks(listener) {\n  var index = -1;\n  tasks.some(function (task, i) {\n    if (task.listener === listener) {\n      index = i;\n      return true;\n    }\n    return false;\n  });\n  return index;\n}\n\nvar AnimEvent = {\n  /**\n   * @param {function} listener - An event listener.\n   * @returns {(function|null)} A wrapped event listener.\n   */\n  add: function add(listener) {\n    var task = void 0;\n    if (indexOfTasks(listener) === -1) {\n      tasks.push(task = { listener: listener });\n      return function (event) {\n        task.event = event;\n        if (!requestID) {\n          step();\n        }\n      };\n    }\n    return null;\n  },\n  remove: function remove(listener) {\n    var iRemove = void 0;\n    if ((iRemove = indexOfTasks(listener)) > -1) {\n      tasks.splice(iRemove, 1);\n      if (!tasks.length && requestID) {\n        cancelAnim.call(window, requestID);\n        requestID = null;\n      }\n    }\n  }\n};\n\nexport default AnimEvent;","var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n * PointerEvent\n * https://github.com/anseki/pointer-event\n *\n * Copyright (c) 2018 anseki\n * Licensed under the MIT license.\n */\n\nimport AnimEvent from 'anim-event';\n\nvar DUPLICATE_INTERVAL = 400; // For avoiding mouse event that fired by touch interface\n\n// [DEBUG]\nvar traceLog = [];\n// [/DEBUG]\n\n// Support options for addEventListener\nvar passiveSupported = false;\ntry {\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n    get: function get() {\n      passiveSupported = true;\n    }\n  }));\n} catch (error) {} /* ignore */\n\n/**\n * addEventListener with specific option.\n * @param {Element} target - An event-target element.\n * @param {string} type - The event type to listen for.\n * @param {function} listener - The EventListener.\n * @param {Object} options - An options object.\n * @returns {void}\n */\nfunction addEventListenerWithOptions(target, type, listener, options) {\n  // When `passive` is not supported, consider that the `useCapture` is supported instead of\n  // `options` (i.e. options other than the `passive` also are not supported).\n  target.addEventListener(type, listener, passiveSupported ? options : options.capture);\n}\n\n// Gecko, Trident pick drag-event of some elements such as img, a, etc.\nfunction dragstart(event) {\n  event.preventDefault();\n}\n\nvar PointerEvent = function () {\n  /**\n   * Create a `PointerEvent` instance.\n   * @param {Object} [options] - Options\n   */\n  function PointerEvent(options) {\n    var _this = this;\n\n    _classCallCheck(this, PointerEvent);\n\n    this.startHandlers = {};\n    this.lastHandlerId = 0;\n    this.curPointerClass = null;\n    this.lastPointerXY = { clientX: 0, clientY: 0 };\n    this.lastStartTime = 0;\n\n    // Options\n    this.options = { // Default\n      preventDefault: true,\n      stopPropagation: true\n    };\n    if (options) {\n      ['preventDefault', 'stopPropagation'].forEach(function (option) {\n        if (typeof options[option] === 'boolean') {\n          _this.options[option] = options[option];\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {function} startHandler - This is called with pointerXY when it starts. This returns boolean.\n   * @returns {number} handlerId which is used for adding/removing to element.\n   */\n\n\n  _createClass(PointerEvent, [{\n    key: 'regStartHandler',\n    value: function regStartHandler(startHandler) {\n      var that = this;\n      that.startHandlers[++that.lastHandlerId] = function (event) {\n        traceLog.push('<startListener>', 'type:' + event.type); // [DEBUG/]\n        traceLog.push('curPointerClass:' + that.curPointerClass); // [DEBUG/]\n        var pointerClass = event.type === 'mousedown' ? 'mouse' : 'touch',\n            pointerXY = pointerClass === 'mouse' ? event : event.targetTouches[0] || event.touches[0],\n            now = Date.now();\n        if (that.curPointerClass && pointerClass !== that.curPointerClass && now - that.lastStartTime < DUPLICATE_INTERVAL) {\n          console.log('Event \"' + event.type + '\" was ignored.'); // [DEBUG/]\n          traceLog.push('CANCEL', '</startListener>'); // [DEBUG/]\n          return;\n        }\n        if (startHandler(pointerXY)) {\n          that.curPointerClass = pointerClass;\n          traceLog.push('curPointerClass:' + that.curPointerClass); // [DEBUG/]\n          that.lastPointerXY.clientX = pointerXY.clientX;\n          that.lastPointerXY.clientY = pointerXY.clientY;\n          traceLog.push('lastPointerXY:(' + that.lastPointerXY.clientX + ',' + that.lastPointerXY.clientY + ')'); // [DEBUG/]\n          that.lastStartTime = now;\n          if (that.options.preventDefault) {\n            event.preventDefault();\n          }\n          if (that.options.stopPropagation) {\n            event.stopPropagation();\n          }\n        }\n        traceLog.push('</startListener>'); // [DEBUG/]\n      };\n      return that.lastHandlerId;\n    }\n\n    /**\n     * @param {number} handlerId - An ID which was returned by regStartHandler.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'unregStartHandler',\n    value: function unregStartHandler(handlerId) {\n      delete this.startHandlers[handlerId];\n    }\n\n    /**\n     * @param {Element} element - A target element.\n     * @param {number} handlerId - An ID which was returned by regStartHandler.\n     * @returns {number} handlerId which was passed.\n     */\n\n  }, {\n    key: 'addStartHandler',\n    value: function addStartHandler(element, handlerId) {\n      if (!this.startHandlers[handlerId]) {\n        throw new Error('Invalid handlerId: ' + handlerId);\n      }\n      addEventListenerWithOptions(element, 'mousedown', this.startHandlers[handlerId], { capture: false, passive: false });\n      addEventListenerWithOptions(element, 'touchstart', this.startHandlers[handlerId], { capture: false, passive: false });\n      addEventListenerWithOptions(element, 'dragstart', dragstart, { capture: false, passive: false });\n      return handlerId;\n    }\n\n    /**\n     * @param {Element} element - A target element.\n     * @param {number} handlerId - An ID which was returned by regStartHandler.\n     * @returns {number} handlerId which was passed.\n     */\n\n  }, {\n    key: 'removeStartHandler',\n    value: function removeStartHandler(element, handlerId) {\n      if (!this.startHandlers[handlerId]) {\n        throw new Error('Invalid handlerId: ' + handlerId);\n      }\n      element.removeEventListener('mousedown', this.startHandlers[handlerId], false);\n      element.removeEventListener('touchstart', this.startHandlers[handlerId], false);\n      element.removeEventListener('dragstart', dragstart, false);\n      return handlerId;\n    }\n\n    /**\n     * @param {Element} element - A target element.\n     * @param {function} moveHandler - This is called with pointerXY when it moves.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'addMoveHandler',\n    value: function addMoveHandler(element, moveHandler) {\n      var that = this;\n      AnimEvent.add = function (listener) {\n        return listener;\n      }; // Disable AnimEvent [DEBUG/]\n      var wrappedHandler = AnimEvent.add(function (event) {\n        traceLog.push('<moveListener>', 'type:' + event.type); // [DEBUG/]\n        traceLog.push('curPointerClass:' + that.curPointerClass); // [DEBUG/]\n        var pointerClass = event.type === 'mousemove' ? 'mouse' : 'touch',\n            pointerXY = pointerClass === 'mouse' ? event : event.targetTouches[0] || event.touches[0];\n        if (pointerClass === that.curPointerClass) {\n          that.move(pointerXY);\n          if (that.options.preventDefault) {\n            event.preventDefault();\n          }\n          if (that.options.stopPropagation) {\n            event.stopPropagation();\n          }\n        }\n        traceLog.push('</moveListener>'); // [DEBUG/]\n      });\n      addEventListenerWithOptions(element, 'mousemove', wrappedHandler, { capture: false, passive: false });\n      addEventListenerWithOptions(element, 'touchmove', wrappedHandler, { capture: false, passive: false });\n      that.curMoveHandler = moveHandler;\n    }\n\n    /**\n     * @param {{clientX, clientY}} [pointerXY] - This might be MouseEvent, Touch of TouchEvent or Object.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'move',\n    value: function move(pointerXY) {\n      traceLog.push('<move>'); // [DEBUG/]\n      if (!pointerXY) {\n        traceLog.push('NO-pointerXY');\n      } // [DEBUG/]\n      if (pointerXY) {\n        this.lastPointerXY.clientX = pointerXY.clientX;\n        this.lastPointerXY.clientY = pointerXY.clientY;\n        traceLog.push('lastPointerXY:(' + this.lastPointerXY.clientX + ',' + this.lastPointerXY.clientY + ')'); // [DEBUG/]\n      }\n      if (this.curMoveHandler) {\n        this.curMoveHandler(this.lastPointerXY);\n      }\n      traceLog.push('</move>'); // [DEBUG/]\n    }\n\n    /**\n     * @param {Element} element - A target element.\n     * @param {function} endHandler - This is called with pointerXY when it ends.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'addEndHandler',\n    value: function addEndHandler(element, endHandler) {\n      var that = this;\n      function wrappedHandler(event) {\n        traceLog.push('<endListener>', 'type:' + event.type); // [DEBUG/]\n        traceLog.push('curPointerClass:' + that.curPointerClass); // [DEBUG/]\n        var pointerClass = event.type === 'mouseup' ? 'mouse' : 'touch',\n            pointerXY = pointerClass === 'mouse' ? event : event.targetTouches[0] || event.touches[0];\n        if (pointerClass === that.curPointerClass) {\n          if (!pointerXY) {\n            console.log('No pointerXY in event \"' + event.type + '\".');\n          } // [DEBUG/]\n          that.end(pointerXY);\n          if (that.options.preventDefault) {\n            event.preventDefault();\n          }\n          if (that.options.stopPropagation) {\n            event.stopPropagation();\n          }\n        }\n        traceLog.push('</endListener>'); // [DEBUG/]\n      }\n      addEventListenerWithOptions(element, 'mouseup', wrappedHandler, { capture: false, passive: false });\n      addEventListenerWithOptions(element, 'touchend', wrappedHandler, { capture: false, passive: false });\n      that.curEndHandler = endHandler;\n    }\n\n    /**\n     * @param {{clientX, clientY}} [pointerXY] - This might be MouseEvent, Touch of TouchEvent or Object.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'end',\n    value: function end(pointerXY) {\n      traceLog.push('<end>'); // [DEBUG/]\n      if (!pointerXY) {\n        traceLog.push('NO-pointerXY');\n      } // [DEBUG/]\n      if (pointerXY) {\n        this.lastPointerXY.clientX = pointerXY.clientX;\n        this.lastPointerXY.clientY = pointerXY.clientY;\n        traceLog.push('lastPointerXY:(' + this.lastPointerXY.clientX + ',' + this.lastPointerXY.clientY + ')'); // [DEBUG/]\n      }\n      if (this.curEndHandler) {\n        this.curEndHandler(this.lastPointerXY);\n      }\n      this.curPointerClass = null;\n      traceLog.push('curPointerClass:' + this.curPointerClass); // [DEBUG/]\n      traceLog.push('</end>'); // [DEBUG/]\n    }\n\n    /**\n     * @param {Element} element - A target element.\n     * @param {function} cancelHandler - This is called when it cancels.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'addCancelHandler',\n    value: function addCancelHandler(element, cancelHandler) {\n      var that = this;\n      function wrappedHandler(event // [DEBUG/]\n      ) {\n        traceLog.push('<cancelListener>', 'type:' + event.type); // [DEBUG/]\n        traceLog.push('curPointerClass:' + that.curPointerClass); // [DEBUG/]\n        /*\n          Now, this is fired by touchcancel only, but it might be fired even if curPointerClass is mouse.\n        */\n        // const pointerClass = 'touch';\n        // if (pointerClass === that.curPointerClass) {\n        that.cancel();\n        // }\n        traceLog.push('</cancelListener>'); // [DEBUG/]\n      }\n      addEventListenerWithOptions(element, 'touchcancel', wrappedHandler, { capture: false, passive: false });\n      that.curCancelHandler = cancelHandler;\n    }\n\n    /**\n     * @returns {void}\n     */\n\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      traceLog.push('<cancel>'); // [DEBUG/]\n      if (this.curCancelHandler) {\n        this.curCancelHandler();\n      }\n      this.curPointerClass = null;\n      traceLog.push('curPointerClass:' + this.curPointerClass); // [DEBUG/]\n      traceLog.push('</cancel>'); // [DEBUG/]\n    }\n  }], [{\n    key: 'addEventListenerWithOptions',\n    get: function get() {\n      return addEventListenerWithOptions;\n    }\n  }]);\n\n  return PointerEvent;\n}();\n\n// [DEBUG]\n\n\nPointerEvent.traceLog = traceLog;\n// [/DEBUG]\n\nexport default PointerEvent;"],"sourceRoot":""}